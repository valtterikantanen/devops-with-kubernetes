name: Release Todo App

on:
  push:
    paths:
      - 'todo-app-project/**'
      - '.github/workflows/main.yml'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, publish and deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

      - name: Configure Docker
        run: gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Decrypt secret
        run: |
          curl -LO https://github.com/getsops/sops/releases/download/v3.9.0/sops_3.9.0_amd64.deb
          sudo dpkg -i sops_3.9.0_amd64.deb
          export SOPS_AGE_KEY=${{ secrets.SOPS_AGE_KEY }}
          sops --decrypt todo-app-project/todo-backend/manifests/secret.enc.yaml > todo-app-project/todo-backend/manifests/secret.yaml

      - name: Set namespace
        run: |
          if [[ "${BRANCH}" != "main" ]]; then
            echo "NAMESPACE=${BRANCH}" >> $GITHUB_ENV
          else
            echo "NAMESPACE=default" >> $GITHUB_ENV
          fi

      - name: Build and push Docker images
        working-directory: todo-app-project
        run: |
          docker build --tag gcr.io/${PROJECT_ID}/todo-app-project:${BRANCH}-${GITHUB_SHA} todo-app/src
          docker build --tag gcr.io/${PROJECT_ID}/todo-app-backend:${BRANCH}-${GITHUB_SHA} todo-backend/src
          docker build --tag gcr.io/${PROJECT_ID}/todo-cron:${BRANCH}-${GITHUB_SHA} todo-cron
          docker push gcr.io/${PROJECT_ID}/todo-app-project:${BRANCH}-${GITHUB_SHA}
          docker push gcr.io/${PROJECT_ID}/todo-app-backend:${BRANCH}-${GITHUB_SHA}
          docker push gcr.io/${PROJECT_ID}/todo-cron:${BRANCH}-${GITHUB_SHA}

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Deploy to GKE
        working-directory: todo-app-project
        run: |
          kubectl get namespace ${NAMESPACE} || kubectl create namespace ${NAMESPACE}
          kubectl config set-context --current --namespace=${NAMESPACE}
          kustomize edit set namespace ${NAMESPACE}
          kustomize edit set image TODO_APP_IMAGE=gcr.io/${PROJECT_ID}/todo-app-project:${BRANCH}-${GITHUB_SHA}
          kustomize edit set image TODO_BACKEND_IMAGE=gcr.io/${PROJECT_ID}/todo-app-backend:${BRANCH}-${GITHUB_SHA}
          kustomize edit set image TODO_CRON_IMAGE=gcr.io/${PROJECT_ID}/todo-cron:${BRANCH}-${GITHUB_SHA}
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/todo-app-project-dep
          kubectl rollout status deployment/todo-app-backend-dep
          kubectl get services -o wide
